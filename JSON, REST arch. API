---Parsing JavaScript Object Notation (JSON)----

https://www.json.org/json-es.html 
es un formato de representacion de datos, mas simple que XML. Recordemos que eran formatos de serializacion: Data serialization is the process of converting data objects
present in complex data structures into a byte stream for storage, transfer and distribution purposes on physical devices. JSON is quickly becoming the format of choice 
for nearly all data exchange between applications because of its relative simplicity compared to XML.
https://devopedia.org/data-serialization#:~:text=XML%20%2C%20JSON%20%2C%20BSON%2C%20YAML,commonly%20used%20data%20serialization%20formats.



Comunmnete usado con las APIs. ¿Qué es una API?
Las API  “interfaz de programación de aplicaciones” son mecanismos que permiten a dos componentes de software comunicarse entre sí mediante un conjunto de definiciones y
protocolos.La interfaz puede considerarse como un contrato de servicio entre dos aplicaciones. Este contrato define cómo se comunican entre sí mediante solicitudes y
respuestas. La documentación de su API contiene información sobre cómo los desarrolladores deben estructurar esas solicitudes y respuestas.La arquitectura de las API 
suele explicarse en términos de cliente y servidor. La aplicación que envía la solicitud se llama cliente, y la que envía la respuesta se llama servidor.

Por ejemplo, el sistema de software del instituto de meteorología contiene datos meteorológicos diarios. La aplicación meteorológica de su teléfono “habla” con este
sistema a través de las API y le muestra las actualizaciones meteorológicas diarias en su teléfono. la base de datos meteorológicos del instituto es el servidor y la 
aplicación móvil es el cliente. 



Parsing JSON
We construct our JSON by nesting dictionaries and lists as needed. In this example, we represent a list of users where each user is a set of key-value pairs (i.e., a 
dictionary). So we have a list of dictionaries. In the program jason_1.py , we use the built-in json library to parse the JSON and read through the data. 
Compare this closely to the equivalent XML data and code above. The JSON has less detail, so we must know in advance that we are getting a list and that the list is of 
users and each user is a set of key-value pairs. The JSON is more succinct (an advantage) but also is less self-describing (a disadvantage).

